<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Retrievers on 基于LLM的系统设计与实现</title>
    <link>https://www6v.github.io/www6vAIGC/categories/Retrievers/</link>
    <description>Recent content in Retrievers on 基于LLM的系统设计与实现</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 31 Dec 2022 06:25:34 +0000</lastBuildDate>
    <atom:link href="https://www6v.github.io/www6vAIGC/categories/Retrievers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrievers</title>
      <link>https://www6v.github.io/www6vAIGC/docs/Langchain/Retrievers/</link>
      <pubDate>Sat, 31 Dec 2022 06:25:34 +0000</pubDate>
      <guid>https://www6v.github.io/www6vAIGC/docs/Langchain/Retrievers/</guid>
      <description>&lt;p&gt;&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h1 id=&#34;langchain-retrievers10&#34;&gt;&#xA;  Langchain Retrievers[10]&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#langchain-retrievers10&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;multiqueryretriever&#34;&gt;&#xA;  MultiQueryRetriever&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#multiqueryretriever&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;The MultiQueryRetriever automates the process of prompt tuning by using an LLM to &lt;strong&gt;generate multiple queries from different perspectives for a given user input query&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;contextual-compression&#34;&gt;&#xA;  Contextual compression&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#contextual-compression&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;ensemble-retriever&#34;&gt;&#xA;  Ensemble Retriever&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ensemble-retriever&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;The EnsembleRetriever takes a list of retrievers as input and ensemble the results of their get_relevant_documents() methods and &lt;strong&gt;rerank the results based on the Reciprocal Rank Fusion algorithm&lt;/strong&gt;.&#xA;The most common pattern is to &lt;strong&gt;combine a sparse retriever (like BM25) with a dense retriever (like embedding similarity)&lt;/strong&gt;, because their strengths are complementary. It is also known as “hybrid search”.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
